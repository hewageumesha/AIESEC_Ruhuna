{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\umesha 1096\\\\Desktop\\\\AIESEC_in_Ruhuna\\\\frontend\\\\src\\\\Contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Create the context with an initial value of undefined\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext(undefined);\n\n// ThemeProvider component to wrap around the app\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  // Initialize theme state with 'light' as the default theme\n  const [theme, setTheme] = useState('light');\n\n  // Check if the theme was previously saved in localStorage\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      setTheme(savedTheme); // Set the saved theme if it exists\n    }\n  }, []);\n\n  // Function to toggle between light and dark themes\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light'; // Switch theme\n    setTheme(newTheme);\n    localStorage.setItem('theme', newTheme); // Save the new theme in localStorage\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: theme,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"Z8UCD9KudyQA62DCQ9e5cf9+m5k=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","undefined","ThemeProvider","children","_s","theme","setTheme","savedTheme","localStorage","getItem","toggleTheme","newTheme","setItem","Provider","value","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/umesha 1096/Desktop/AIESEC_in_Ruhuna/frontend/src/Contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\n// Create the context with an initial value of undefined\r\nexport const ThemeContext = createContext(undefined);\r\n\r\n// ThemeProvider component to wrap around the app\r\nexport const ThemeProvider = ({ children }) => {\r\n  // Initialize theme state with 'light' as the default theme\r\n  const [theme, setTheme] = useState('light');\r\n\r\n  // Check if the theme was previously saved in localStorage\r\n  useEffect(() => {\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme) {\r\n      setTheme(savedTheme); // Set the saved theme if it exists\r\n    }\r\n  }, []);\r\n\r\n  // Function to toggle between light and dark themes\r\n  const toggleTheme = () => {\r\n    const newTheme = theme === 'light' ? 'dark' : 'light'; // Switch theme\r\n    setTheme(newTheme);\r\n    localStorage.setItem('theme', newTheme); // Save the new theme in localStorage\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      <div className={theme}>{children}</div> {/* Apply the theme class to the children */}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAACM,SAAS,CAAC;;AAEpD;AACA,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC;;EAE3C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,IAAIF,UAAU,EAAE;MACdD,QAAQ,CAACC,UAAU,CAAC,CAAC,CAAC;IACxB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGN,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC;IACvDC,QAAQ,CAACK,QAAQ,CAAC;IAClBH,YAAY,CAACI,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC,CAAC,CAAC;EAC3C,CAAC;EAED,oBACEZ,OAAA,CAACC,YAAY,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAET,KAAK;MAAEK;IAAY,CAAE;IAAAP,QAAA,gBACnDJ,OAAA;MAAKgB,SAAS,EAAEV,KAAM;MAAAF,QAAA,EAAEA;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAE5B,CAAC;AAACf,EAAA,CAxBWF,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}